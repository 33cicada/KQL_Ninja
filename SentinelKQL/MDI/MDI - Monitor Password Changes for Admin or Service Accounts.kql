// Enhanced query for monitoring password changes for admin (.adm) and service (svc) accounts
// Configurable parameters
let adminPatterns = dynamic([".adm", "svc", "admin", "-sa", "_sa"]);
// Basic query for password change events
let PasswordChangeEvents = IdentityDirectoryEvents
| where ActionType == "Account Password changed"
| extend ActorAccount = tostring(AdditionalFields["ACTOR.ACCOUNT"])
| extend TargetAccount = tostring(AdditionalFields["TARGET.ACCOUNT"])
| extend OperationStatus = tostring(AdditionalFields["OPERATION.STATUS"])
| where isnotempty(TargetAccountUpn)
| where TargetAccountUpn has_any (adminPatterns);
// Join with IdentityQueryEvents to get additional context
let EnrichedEvents = PasswordChangeEvents
| join kind=leftouter (
    IdentityQueryEvents
    | project TargetDeviceName, IPAddress
) on TargetDeviceName;
// Final results with updated risk analysis
EnrichedEvents
| extend AccountType = case(
    TargetAccountUpn has ".adm", "Admin",
    TargetAccountUpn has "svc", "Service",
    TargetAccountUpn has "admin", "Admin",
    "Other"
)
| extend IsSelfChange = iff(ActorAccount == TargetAccount, true, false)
| extend RiskLevel = case(
    // Self-changes are now Critical risk as requested
    AccountType in ("Admin", "Service") and IsSelfChange == true, "High",
    // Changes by others are now Medium risk as requested
    AccountType in ("Admin", "Service") and IsSelfChange == false, "Medium",
    "Low"
)
| project 
    TimeGenerated, 
    PasswordChangedFor = TargetAccountDisplayName, 
    TargetAccountUpn, 
    AccountType, 
    ChangedBy = ActorAccount, 
    IsSelfChange, 
    DeviceName = TargetDeviceName, 
    IPAddress, 
    OperationStatus, 
    RiskLevel
| order by RiskLevel asc, TimeGenerated desc // Critical risk first
